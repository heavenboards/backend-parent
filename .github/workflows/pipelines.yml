name: 🔥 Сборка, тесты и деплой

on:
  push:
    branches:
      - '**'

jobs:
  user-service-test:
    runs-on: ubuntu-latest
    steps:
      - name: 👉🏼 Переключаемся на файлы проекта
        uses: actions/checkout@v3

      - name: 👉🏼 Инициализируем модуль
        run: |
          git clone https://github.com/heavenboards/user-service.git
          cd ./user-service
          git checkout ${GITHUB_REF##*/} && git pull || echo "In ${sm_path} branch ${GITHUB_REF##*/} not found"
          git submodule update --init --remote --recursive
          git submodule foreach 'git checkout ${GITHUB_REF##*/} && git pull || echo "In ${sm_path} branch ${GITHUB_REF##*/} not found"'

      - name: 👉🏼 Настройка JDK
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: 👉🏼 Делаем maven wrapper исполняемым
        run: |
          ls
          cd ./user-service
          chmod +x ./mvnw

      - name: 👉🏼 Запускаем сборку и тесты
        run: |
          ls
          cd ./user-service
          git checkout ${GITHUB_REF##*/} && git pull || echo "In ${sm_path} branch ${GITHUB_REF##*/} not found"
          git submodule update --init --remote --recursive
          git submodule foreach 'git checkout ${GITHUB_REF##*/} && git pull || echo "In ${sm_path} branch ${GITHUB_REF##*/} not found"'
          ./mvnw clean package
  user-service-dockerize:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: user-service-test
    steps:
      - name: 👉🏼 Устанавливаем sshpass
        run: sudo apt update && sudo apt install -y sshpass
  user-service-deploy:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: user-service-dockerize
    steps:
      - name: 👉🏼 Устанавливаем sshpass
        run: sudo apt update && sudo apt install -y sshpass
  project-service-test:
    runs-on: ubuntu-latest
    steps:
      - name: 👉🏼 Переключаемся на файлы проекта
        uses: actions/checkout@v3

      - name: 👉🏼 Инициализируем модуль
        run: |
          git clone https://github.com/heavenboards/project-service.git
          cd ./project-service
          git checkout ${GITHUB_REF##*/} && git pull || echo "In ${sm_path} branch ${GITHUB_REF##*/} not found"
          git submodule update --init --remote --recursive
          git submodule foreach 'git checkout ${GITHUB_REF##*/} && git pull || echo "In ${sm_path} branch ${GITHUB_REF##*/} not found"'

      - name: 👉🏼 Настройка JDK
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: 👉🏼 Делаем maven wrapper исполняемым
        run: |
          ls
          cd ./project-service
          chmod +x ./mvnw

      - name: 👉🏼 Запускаем сборку и тесты
        run: |
          ls
          cd ./project-service
          git checkout ${GITHUB_REF##*/} && git pull || echo "In ${sm_path} branch ${GITHUB_REF##*/} not found"
          git submodule update --init --remote --recursive
          git submodule foreach 'git checkout ${GITHUB_REF##*/} && git pull || echo "In ${sm_path} branch ${GITHUB_REF##*/} not found"'
          ./mvnw clean package
  project-service-dockerize:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: project-service-test
    steps:
      - name: 👉🏼 Устанавливаем sshpass
        run: sudo apt update && sudo apt install -y sshpass
  project-service-deploy:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: project-service-dockerize
    steps:
      - name: 👉🏼 Устанавливаем sshpass
        run: sudo apt update && sudo apt install -y sshpass
  composer-service-test:
    runs-on: ubuntu-latest
    steps:
      - name: 👉🏼 Переключаемся на файлы проекта
        uses: actions/checkout@v3

      - name: 👉🏼 Инициализируем модуль
        run: |
          git clone https://github.com/heavenboards/composer-service.git
          cd ./composer-service
          git checkout ${GITHUB_REF##*/} && git pull || echo "In ${sm_path} branch ${GITHUB_REF##*/} not found"
          git submodule update --init --remote --recursive
          git submodule foreach 'git checkout ${GITHUB_REF##*/} && git pull || echo "In ${sm_path} branch ${GITHUB_REF##*/} not found"'

      - name: 👉🏼 Настройка JDK
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: 👉🏼 Делаем maven wrapper исполняемым
        run: |
          ls
          cd ./composer-service
          chmod +x ./mvnw

      - name: 👉🏼 Запускаем сборку и тесты
        run: |
          ls
          cd ./composer-service
          git checkout ${GITHUB_REF##*/} && git pull || echo "In ${sm_path} branch ${GITHUB_REF##*/} not found"
          git submodule update --init --remote --recursive
          git submodule foreach 'git checkout ${GITHUB_REF##*/} && git pull || echo "In ${sm_path} branch ${GITHUB_REF##*/} not found"'
          ./mvnw clean package
  composer-service-dockerize:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: composer-service-test
    steps:
      - name: 👉🏼 Устанавливаем sshpass
        run: sudo apt update && sudo apt install -y sshpass
  composer-service-deploy:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: composer-service-dockerize
    steps:
      - name: 👉🏼 Устанавливаем sshpass
        run: sudo apt update && sudo apt install -y sshpass
  board-service-test:
    runs-on: ubuntu-latest
    steps:
      - name: 👉🏼 Переключаемся на файлы проекта
        uses: actions/checkout@v3

      - name: 👉🏼 Инициализируем модуль
        run: |
          git clone https://github.com/heavenboards/board-service.git
          cd ./board-service
          git checkout ${GITHUB_REF##*/} && git pull || echo "In ${sm_path} branch ${GITHUB_REF##*/} not found"
          git submodule update --init --remote --recursive
          git submodule foreach 'git checkout ${GITHUB_REF##*/} && git pull || echo "In ${sm_path} branch ${GITHUB_REF##*/} not found"'

      - name: 👉🏼 Настройка JDK
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: 👉🏼 Делаем maven wrapper исполняемым
        run: |
          ls
          cd ./board-service
          chmod +x ./mvnw

      - name: 👉🏼 Запускаем сборку и тесты
        run: |
          ls
          cd ./board-service
          git checkout ${GITHUB_REF##*/} && git pull || echo "In ${sm_path} branch ${GITHUB_REF##*/} not found"
          git submodule update --init --remote --recursive
          git submodule foreach 'git checkout ${GITHUB_REF##*/} && git pull || echo "In ${sm_path} branch ${GITHUB_REF##*/} not found"'
          ./mvnw clean package
  board-service-dockerize:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: board-service-test
    steps:
      - name: 👉🏼 Устанавливаем sshpass
        run: sudo apt update && sudo apt install -y sshpass
  board-service-deploy:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: board-service-dockerize
    steps:
      - name: 👉🏼 Устанавливаем sshpass
        run: sudo apt update && sudo apt install -y sshpass
  task-service-test:
    runs-on: ubuntu-latest
    steps:
      - name: 👉🏼 Переключаемся на файлы проекта
        uses: actions/checkout@v3

      - name: 👉🏼 Инициализируем модуль
        run: |
          git clone https://github.com/heavenboards/task-service.git
          cd ./task-service
          git checkout ${GITHUB_REF##*/} && git pull || echo "In ${sm_path} branch ${GITHUB_REF##*/} not found"
          git submodule update --init --remote --recursive
          git submodule foreach 'git checkout ${GITHUB_REF##*/} && git pull || echo "In ${sm_path} branch ${GITHUB_REF##*/} not found"'

      - name: 👉🏼 Настройка JDK
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: 👉🏼 Делаем maven wrapper исполняемым
        run: |
          ls
          cd ./task-service
          chmod +x ./mvnw

      - name: 👉🏼 Запускаем сборку и тесты
        run: |
          ls
          cd ./task-service
          git checkout ${GITHUB_REF##*/} && git pull || echo "In ${sm_path} branch ${GITHUB_REF##*/} not found"
          git submodule update --init --remote --recursive
          git submodule foreach 'git checkout ${GITHUB_REF##*/} && git pull || echo "In ${sm_path} branch ${GITHUB_REF##*/} not found"'
          ./mvnw clean package
  task-service-dockerize:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: task-service-test
    steps:
      - name: 👉🏼 Устанавливаем sshpass
        run: sudo apt update && sudo apt install -y sshpass
  task-service-deploy:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: task-service-dockerize
    steps:
      - name: 👉🏼 Устанавливаем sshpass
        run: sudo apt update && sudo apt install -y sshpass
